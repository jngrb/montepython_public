#------Experiments to test (separated with commas)-----

data.experiments=['distance_priors']

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to None
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'. You should put the derived
# parameters at the end, and in case you are using the `-j fast` Cholesky
# decomposition, you should order your nuisance parameters from slowest to
# fastest.

# Cosmological parameters list

data.parameters['omega_b']   = [2.2253,   None, None, 0.028,  0.01,   'cosmo']
data.parameters['omega_cdm'] = [0.11919,  None, None, 0.0027,    1,   'cosmo']
data.parameters['H0']        = [67.802,   None, None, 1.2,       1,   'cosmo']
data.parameters['A_s']       = [2.2177,      0, None, 0.055, 1.e-9,   'cosmo']
data.parameters['n_s']       = [0.96229,     0, None, 0.0074,    1,   'cosmo']
data.parameters['tau_reio']  = [0.09463,     0, None, 0.013,     1,   'cosmo']

# Derived parameters

data.parameters['z_reio']       = [1, None, None, 0, 1, 'derived']
data.parameters['Omega_m']      = [1, None, None, 0, 1, 'derived']
data.parameters['Omega_Lambda'] = [1, None, None, 0, 1, 'derived']
data.parameters['YHe']          = [1, None, None, 0, 1, 'derived']
data.parameters['ln10^{10}A_s'] = [0, None, None, 0, 1, 'derived']
data.parameters['100*theta_s']  = [0, None, None, 0, 1, 'derived']
data.parameters['ra_rec']       = [0, None, None, 0, 1, 'derived']

# Other cosmo parameters (fixed parameters, precision parameters, etc.)

data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
data.cosmo_arguments['k_pivot'] = 0.05

# The base model features two massless
# and one massive neutrino with m=0.06eV.
# The settings below ensures that these
# three species contribute equally
# to the radiation density at large
# redshift, with a total of Neff=3.046
data.cosmo_arguments['N_eff'] = 2.03351
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06
data.cosmo_arguments['T_ncdm'] = 0.715985

# This settings is to get the same
# (arbitrary) reionization width as in CAMB
data.cosmo_arguments['reionization_width']=0.5

#------ Mcmc parameters ----

data.N=10
data.write_step=5

